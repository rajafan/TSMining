overlap = 0, w = 4, a = 5, mask.size = 4)
res.2 <- Func.motif(ts = ts2, global.norm = TRUE, local.norm = TRUE, window.size = 18,
overlap = 0, w = 4, a = 5, mask.size = 4)
#Perform multivaraite motif discovery
res.multi <- Func.motif.multivariate(motif.list = list(res.1$Indices, res.2$Indices),
window.sizes = c(12,18), alpha = 0.7)
data <- rnorm(n = 100, mean = 0, sd = .5)
set.seed(1)
data <- rnorm(n = 100, mean = 0, sd = .5)
library(ggplot2)
ggplot(data = data) + geom_line(aes(x = 1:100, y = data))
library(ggplot2)
ggplot(data = data) + geom_line(aes(x = 1:100, y = data))
ggplot(
ggplot() + geom_line(aes(x = 1:100, y = data))
library(ggplot2)
ggplot() + geom_line(aes(x = 1:100, y = data))
data[21:30] <- 0:9
data[61:70] <- 0:9
ggplot() + geom_line(aes(x = 1:100, y = data))
data[21:30] <- seq(from = -1, to = 1, length.out = 10)
ggplot() + geom_line(aes(x = 1:100, y = data))
data[61:70] <- seq(from = -1, to = 1, length.out = 10)
ggplot() + geom_line(aes(x = 1:100, y = data))
set.seed(1)
data <- rnorm(n = 100, mean = 0, sd = .25)
library(ggplot2)
ggplot() + geom_line(aes(x = 1:100, y = data))
data[21:30] <- seq(from = -1, to = 1, length.out = 10)
data[61:70] <- seq(from = -1, to = 1, length.out = 10)
ggplot() + geom_line(aes(x = 1:100, y = data))
set.seed(1)
set.seed(1)
data <- rnorm(n = 100, mean = 0, sd = .25)
data[21:30] <- seq(from = -1, to = 1, length.out = 10)
data[61:70] <- seq(from = -1, to = 1, length.out = 10)
ggplot() + geom_line(aes(x = 1:100, y = data))
set.seed(123)
data.2 <- rnorm(n = 100, mean = 0, sd = .25)
data.2[26:35] <- seq(from = -1, to = 1, length.out = 10)
data.2[66:75] <- seq(from = -1, to = 1, length.out = 10)
ggplot() + geom_line(aes(x = 1:100, y = data.2))
data.com <- data.frame(TS1=data, TS2=data.2)
set.seed(1)
data.1 <- rnorm(n = 100, mean = 0, sd = .25)
data.1[21:30] <- seq(from = -1, to = 1, length.out = 10)
data.1[61:70] <- seq(from = -1, to = 1, length.out = 10)
ggplot() + geom_line(aes(x = 1:100, y = data.1))
set.seed(123)
data.2 <- rnorm(n = 100, mean = 0, sd = .25)
data.2[21:35] <- seq(from = -1, to = 1, length.out = 15)
data.2[61:75] <- seq(from = -1, to = 1, length.out = 15)
ggplot() + geom_line(aes(x = 1:100, y = data.2))
set.seed(1)
data.1 <- rnorm(n = 100, mean = 0, sd = .25)
data.1[31:40] <- seq(from = -1, to = 1, length.out = 10)
data.1[61:70] <- seq(from = -1, to = 1, length.out = 10)
ggplot() + geom_line(aes(x = 1:100, y = data.1))
set.seed(123)
data.2 <- rnorm(n = 100, mean = 0, sd = .25)
data.2[31:45] <- seq(from = -1, to = 1, length.out = 15)
data.2[61:75] <- seq(from = -1, to = 1, length.out = 15)
ggplot() + geom_line(aes(x = 1:100, y = data.2))
data.com <- data.frame(TS1=data.1, TS2=data.2)
res.1 <- Func.motif(ts = data.com$TS1, global.norm = T, local.norm = F, window.size = 10, overlap = 0, w = 5, a = 5, mask.size = 3)
res.1 <- Func.motif(ts = data.com$TS1, global.norm = T, local.norm = F, window.size = 10, overlap = 0, w = 5, a = 5, mask.size = 3, eps = .01)
res.1 <- Func.motif(ts = data.com$TS1, global.norm = T, local.norm = F, window.size = 10, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
res.1
set.seed(12)
data.1 <- rnorm(n = 100, mean = 0, sd = .25)
data.1[31:40] <- seq(from = -1, to = 1, length.out = 10)
data.1[61:70] <- seq(from = -1, to = 1, length.out = 10)
ggplot() + geom_line(aes(x = 1:100, y = data.1))
set.seed(123)
data.2 <- rnorm(n = 100, mean = 0, sd = .25)
data.2[31:45] <- seq(from = -1, to = 1, length.out = 15)
data.2[61:75] <- seq(from = -1, to = 1, length.out = 15)
ggplot() + geom_line(aes(x = 1:100, y = data.2))
data.com <- data.frame(TS1=data.1, TS2=data.2)
res.1 <- Func.motif(ts = data.com$TS1, global.norm = T, local.norm = F, window.size = 10, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
res.1
set.seed(12)
data.1 <- rnorm(n = 100, mean = 0, sd = .5)
data.1[31:40] <- seq(from = -1, to = 1, length.out = 10)
data.1[61:70] <- seq(from = -1, to = 1, length.out = 10)
ggplot() + geom_line(aes(x = 1:100, y = data.1))
set.seed(123)
data.2 <- rnorm(n = 100, mean = 0, sd = .25)
data.2[31:45] <- seq(from = -1, to = 1, length.out = 15)
data.2[61:75] <- seq(from = -1, to = 1, length.out = 15)
ggplot() + geom_line(aes(x = 1:100, y = data.2))
data.com <- data.frame(TS1=data.1, TS2=data.2)
res.1 <- Func.motif(ts = data.com$TS1, global.norm = T, local.norm = F, window.size = 10, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
res.1
set.seed(2)
data.1 <- rnorm(n = 100, mean = 0, sd = .5)
data.1[31:40] <- seq(from = -1, to = 1, length.out = 10)
data.1[61:70] <- seq(from = -1, to = 1, length.out = 10)
ggplot() + geom_line(aes(x = 1:100, y = data.1))
set.seed(123)
data.2 <- rnorm(n = 100, mean = 0, sd = .25)
data.2[31:45] <- seq(from = -1, to = 1, length.out = 15)
data.2[61:75] <- seq(from = -1, to = 1, length.out = 15)
ggplot() + geom_line(aes(x = 1:100, y = data.2))
data.com <- data.frame(TS1=data.1, TS2=data.2)
res.1 <- Func.motif(ts = data.com$TS1, global.norm = T, local.norm = F, window.size = 10, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
res.1
data.1 <- rnorm(n = 100, mean = 0, sd = .5)
set.seed(2)
data.1 <- rnorm(n = 100, mean = 0, sd = .5)
data.1[1:10] <- seq(from = -1, to = 1, length.out = 10)
data.1[31:40] <- seq(from = -1, to = 1, length.out = 10)
data.1[61:70] <- seq(from = -1, to = 1, length.out = 10)
ggplot() + geom_line(aes(x = 1:100, y = data.1))
set.seed(123)
data.2 <- rnorm(n = 100, mean = 0, sd = .25)
data.2[31:45] <- seq(from = -1, to = 1, length.out = 15)
data.2[61:75] <- seq(from = -1, to = 1, length.out = 15)
ggplot() + geom_line(aes(x = 1:100, y = data.2))
data.com <- data.frame(TS1=data.1, TS2=data.2)
res.1 <- Func.motif(ts = data.com$TS1, global.norm = T, local.norm = F, window.size = 10, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
res.1
res.2 <- Func.motif(ts = data.com$TS2, global.norm = T, local.norm = F, window.size = 15, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
res.2
set.seed(123)
data.2 <- rnorm(n = 100, mean = 0, sd = .25)
data.2[1:15] <- seq(from = -1, to = 1, length.out = 15)
data.2[31:45] <- seq(from = -1, to = 1, length.out = 15)
data.2[61:75] <- seq(from = -1, to = 1, length.out = 15)
ggplot() + geom_line(aes(x = 1:100, y = data.2))
data.com <- data.frame(TS1=data.1, TS2=data.2)
res.1 <- Func.motif(ts = data.com$TS1, global.norm = T, local.norm = F, window.size = 10, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
res.1
res.2 <- Func.motif(ts = data.com$TS2, global.norm = T, local.norm = F, window.size = 15, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
res.2
res.multi <- Func.motif.multivariate(motif.list = list(res.1$Indices, res.2$Indices), window.sizes = c(10,15), alpha = .7)
res.1$Indices
res.2$Indices
res.1 <- Func.motif(ts = data.com$TS1, global.norm = T, local.norm = F, window.size = 10, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
res.1
res.2 <- Func.motif(ts = data.com$TS2, global.norm = T, local.norm = F, window.size = 15, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
res.2
res.multi <- Func.motif.multivariate(motif.list = list(res.1$Indices, res.2$Indices), window.sizes = c(10,15), alpha = .7)
Func.motif.multivariate
list(res.1$Indices, res.2$Indices)
res.multi <- Func.motif.multivariate(motif.list = list(res.1$Indices, res.2$Indices), window.sizes = c(10,15), alpha = .8)
motif.list = list(res.1$Indices, res.2$Indices)
window.sizes = c(10,15)
alpha = .8
tot.no <- sum(plyr::laply(.data = motif.list, .fun = length))
tot.no
w.mat <- matrix(data = 0, nrow = tot.no, ncol = tot.no)
info <- foreach::foreach(i=1:length(motif.list), .combine = rbind) %do% {
info.sub <- foreach::foreach(j=1:length(motif.list[[i]]), .combine = rbind) %do% {
info.sub.sub <- foreach::foreach(q=1:length(motif.list[[i]][[j]]), .combine = rbind) %do% {
c(i,j,q, motif.list[[i]][[j]][q], motif.list[[i]][[j]][q]+window.sizes[i]-1)
}
}
}
library(foreach)
info <- foreach::foreach(i=1:length(motif.list), .combine = rbind) %do% {
info.sub <- foreach::foreach(j=1:length(motif.list[[i]]), .combine = rbind) %do% {
info.sub.sub <- foreach::foreach(q=1:length(motif.list[[i]][[j]]), .combine = rbind) %do% {
c(i,j,q, motif.list[[i]][[j]][q], motif.list[[i]][[j]][q]+window.sizes[i]-1)
}
}
}
info
rownames(info) <- 1:dim(info)[1]
info <- as.data.frame(info)
colnames(info) <- c("Variable","Motif","Member","StartP","EndP")
info$Lab <- as.numeric(as.character(factor(info$Variable*100 + info$Motif, levels = unique(info$Variable*100 + info$Motif), labels = 1:length(unique(info$Variable*100 + info$Motif)))))
info.ori <- info
info.ori
#Generate the weights
pb <- txtProgressBar(min = 0, max = length(unique(info$Lab)))
temp <- foreach::foreach (i = 1:length(unique(info$Lab))) %do% {
setTxtProgressBar(pb = pb, value = i)
mot.con <- info[which(info$Lab==i),]
lab.con <- unique(mot.con$Lab)
n <- dim(mot.con)[1]
variable.con <- unique(mot.con$Variable)
mot.com.all <- info[-which(info$Variable==variable.con),]
temp.ind <- foreach::foreach (j = 1:length(unique(mot.com.all$Lab)), .combine = rbind) %do% {
mot.com <- mot.com.all[which(mot.com.all$Lab==unique(mot.com.all$Lab)[j]),]
lab.com <- unique(mot.com$Lab)
count <- 0
temp.ind.ind <- foreach::foreach (p = 1:dim(mot.con)[1], .combine = c) %do% {
res.temp <- foreach::foreach (x = 1:dim(mot.com)[1], .combine = c) %do% {
out <- ifelse(mot.con[p,"StartP"]>mot.com[x,"EndP"] | mot.con[p,"EndP"]<mot.com[x,"StartP"], yes = 0, no = 1)
return(out)
}
if(sum(res.temp)!=0) {count <- count+1}
return(ifelse(sum(res.temp)!=0, yes = 1, no = 0))
}
w.mat[lab.con ,lab.com] <- round(count/n, 2)
return(c(lab.con, lab.com, temp.ind.ind))
}
return(temp.ind)
}
w.ori <- w.mat
w.ori
occurence <- plyr::daply(.data = info, .variables = "Lab", .fun = function(x) dim(x)[1])
ord <- order(occurence, decreasing = T)
re.temp <- foreach::foreach(t = 1:length(ord)) %do% {
w <- w.mat[ord[t],]
ind.add <- which(w>alpha)
s <- c(ord[t], ind.add)
#Remove some of the occurences of motif j when included by motif i
if(length(ind.add)>0) {
out <- foreach::foreach(o = 1:length(ind.add), .combine = c) %do% {
obs.con <- info[which(info$Lab==ind.add[o]),]
mat <- temp[[ind.add[o]]]
w.mat[ind.add[o], ord[t]] <- 0
oo <- which(info$Lab==ind.add[o] & info$Member %in% c(which(mat[which(mat[,2]==ord[t]),-c(1,2)]==1)))
return(oo)
}
info <- info[-unique(out),]
#Update the weights associated with motif j
#Generate new the weights for the jth row
for (f in 1:length(ind.add)) {
if(length(which(info$Lab==ind.add[f]))!=0) {
mot.con <- info[which(info$Lab==ind.add[f]),]
lab.con <- unique(mot.con$Lab)
n <- dim(mot.con)[1]
variable.con <- unique(mot.con$Variable)
mot.com.all <- info[-which(info$Variable==variable.con),]
for (j in 1:length(unique(mot.com.all$Lab))) {
mot.com <- mot.com.all[which(mot.com.all$Lab==unique(mot.com.all$Lab)[j]),]
lab.com <- unique(mot.com$Lab)
count <- 0
for (p in 1:dim(mot.con)[1]) {
res.temp <- foreach::foreach (x = 1:dim(mot.com)[1], .combine = c) %do% {
out <- ifelse(mot.con[p,"StartP"]>mot.com[x,"EndP"] | mot.con[p,"EndP"]<mot.com[x,"StartP"], yes = 0, no = 1)
return(out)
}
if(sum(res.temp)!=0) {count <- count+1}
}
w.mat[lab.con ,lab.com] <- round(count/n, 2)
}
}
}
return(sort(s, decreasing = F))
}
}
t = 1
w <- w.mat[ord[t],]
ind.add <- which(w>alpha)
s <- c(ord[t], ind.add)
#Remove some of the occurences of motif j when included by motif i
if(length(ind.add)>0) {
out <- foreach::foreach(o = 1:length(ind.add), .combine = c) %do% {
obs.con <- info[which(info$Lab==ind.add[o]),]
mat <- temp[[ind.add[o]]]
w.mat[ind.add[o], ord[t]] <- 0
oo <- which(info$Lab==ind.add[o] & info$Member %in% c(which(mat[which(mat[,2]==ord[t]),-c(1,2)]==1)))
return(oo)
}
info <- info[-unique(out),]
#Update the weights associated with motif j
#Generate new the weights for the jth row
for (f in 1:length(ind.add)) {
if(length(which(info$Lab==ind.add[f]))!=0) {
mot.con <- info[which(info$Lab==ind.add[f]),]
lab.con <- unique(mot.con$Lab)
n <- dim(mot.con)[1]
variable.con <- unique(mot.con$Variable)
mot.com.all <- info[-which(info$Variable==variable.con),]
for (j in 1:length(unique(mot.com.all$Lab))) {
mot.com <- mot.com.all[which(mot.com.all$Lab==unique(mot.com.all$Lab)[j]),]
lab.com <- unique(mot.com$Lab)
count <- 0
for (p in 1:dim(mot.con)[1]) {
res.temp <- foreach::foreach (x = 1:dim(mot.com)[1], .combine = c) %do% {
out <- ifelse(mot.con[p,"StartP"]>mot.com[x,"EndP"] | mot.con[p,"EndP"]<mot.com[x,"StartP"], yes = 0, no = 1)
return(out)
}
if(sum(res.temp)!=0) {count <- count+1}
}
w.mat[lab.con ,lab.com] <- round(count/n, 2)
}
}
}
return(sort(s, decreasing = F))
}
w <- w.mat[ord[t],]
ind.add <- which(w>alpha)
s <- c(ord[t], ind.add)
#Remove some of the occurences of motif j when included by motif i
if(length(ind.add)>0) {
out <- foreach::foreach(o = 1:length(ind.add), .combine = c) %do% {
obs.con <- info[which(info$Lab==ind.add[o]),]
mat <- temp[[ind.add[o]]]
w.mat[ind.add[o], ord[t]] <- 0
oo <- which(info$Lab==ind.add[o] & info$Member %in% c(which(mat[which(mat[,2]==ord[t]),-c(1,2)]==1)))
return(oo)
}
info <- info[-unique(out),]
#Update the weights associated with motif j
#Generate new the weights for the jth row
for (f in 1:length(ind.add)) {
if(length(which(info$Lab==ind.add[f]))!=0) {
mot.con <- info[which(info$Lab==ind.add[f]),]
lab.con <- unique(mot.con$Lab)
n <- dim(mot.con)[1]
variable.con <- unique(mot.con$Variable)
mot.com.all <- info[-which(info$Variable==variable.con),]
for (j in 1:length(unique(mot.com.all$Lab))) {
mot.com <- mot.com.all[which(mot.com.all$Lab==unique(mot.com.all$Lab)[j]),]
lab.com <- unique(mot.com$Lab)
count <- 0
for (p in 1:dim(mot.con)[1]) {
res.temp <- foreach::foreach (x = 1:dim(mot.com)[1], .combine = c) %do% {
out <- ifelse(mot.con[p,"StartP"]>mot.com[x,"EndP"] | mot.con[p,"EndP"]<mot.com[x,"StartP"], yes = 0, no = 1)
return(out)
}
if(sum(res.temp)!=0) {count <- count+1}
}
w.mat[lab.con ,lab.com] <- round(count/n, 2)
}
}
}
return(sort(s, decreasing = F))
}
length(ind.add)
out <- foreach::foreach(o = 1:length(ind.add), .combine = c) %do% {
obs.con <- info[which(info$Lab==ind.add[o]),]
mat <- temp[[ind.add[o]]]
w.mat[ind.add[o], ord[t]] <- 0
oo <- which(info$Lab==ind.add[o] & info$Member %in% c(which(mat[which(mat[,2]==ord[t]),-c(1,2)]==1)))
return(oo)
}
length(ind.add)
o = 1
obs.con <- info[which(info$Lab==ind.add[o]),]
mat <- temp[[ind.add[o]]]
w.mat[ind.add[o], ord[t]] <- 0
oo <- which(info$Lab==ind.add[o] & info$Member %in% c(which(mat[which(mat[,2]==ord[t]),-c(1,2)]==1)))
oo
w.mat[ind.add[o], ord[t]]
info$Lab
ind.add[o]
info$Member
c(which(mat[which(mat[,2]==ord[t]),-c(1,2)]==1))
which(mat[which(mat[,2]==ord[t]),-c(1,2)]==1)
mat
mat[,2]
mat
temp
ord
set.seed(2)
data.1 <- rnorm(n = 100, mean = 0, sd = .5)
data.1[1:10] <- seq(from = 1, to = -11, length.out = 10)
data.1[41:50] <- seq(from = -1, to = 1, length.out = 10)
data.1[11:20] <- seq(from = -1, to = 1, length.out = 10)
data.1[81:90] <- seq(from = 1, to = -11, length.out = 10)
ggplot() + geom_line(aes(x = 1:100, y = data.1))
set.seed(2)
data.1 <- rnorm(n = 100, mean = 0, sd = .5)
data.1[1:10] <- seq(from = 1, to = -1, length.out = 10)
data.1[41:50] <- seq(from = -1, to = 1, length.out = 10)
data.1[11:20] <- seq(from = -1, to = 1, length.out = 10)
data.1[81:90] <- seq(from = 1, to = -1, length.out = 10)
ggplot() + geom_line(aes(x = 1:100, y = data.1))
set.seed(123)
data.2 <- rnorm(n = 100, mean = 0, sd = .25)
data.2[1:20] <- seq(from = -1, to = 1, length.out = 20)
data.2[41:60] <- seq(from = -1, to = 1, length.out = 20)
data.2[81:100] <- seq(from = -1, to = 1, length.out = 20)
ggplot() + geom_line(aes(x = 1:100, y = data.2))
data.com <- data.frame(TS1=data.1, TS2=data.2)
res.1 <- Func.motif(ts = data.com$TS1, global.norm = T, local.norm = F, window.size = 10, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
res.1
res.2 <- Func.motif(ts = data.com$TS2, global.norm = T, local.norm = F, window.size = 15, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
res.2
res.multi <- Func.motif.multivariate(motif.list = list(res.1$Indices, res.2$Indices), window.sizes = c(10,15), alpha = .8)
tot.no <- sum(plyr::laply(.data = motif.list, .fun = length))
tot.no <- sum(plyr::laply(.data = motif.list, .fun = length))
tot.no
motif.list = list(res.1$Indices, res.2$Indices)
res.1 <- Func.motif(ts = data.com$TS1, global.norm = T, local.norm = F, window.size = 10, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
res.1
res.2 <- Func.motif(ts = data.com$TS2, global.norm = T, local.norm = F, window.size = 20, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
res.2
res.multi <- Func.motif.multivariate(motif.list = list(res.1$Indices, res.2$Indices), window.sizes = c(10,20), alpha = .8)
tot.no <- sum(plyr::laply(.data = motif.list, .fun = length))
tot.no
w.mat <- matrix(data = 0, nrow = tot.no, ncol = tot.no)
info <- foreach::foreach(i=1:length(motif.list), .combine = rbind) %do% {
info.sub <- foreach::foreach(j=1:length(motif.list[[i]]), .combine = rbind) %do% {
info.sub.sub <- foreach::foreach(q=1:length(motif.list[[i]][[j]]), .combine = rbind) %do% {
c(i,j,q, motif.list[[i]][[j]][q], motif.list[[i]][[j]][q]+window.sizes[i]-1)
}
}
}
rownames(info) <- 1:dim(info)[1]
info <- as.data.frame(info)
colnames(info) <- c("Variable","Motif","Member","StartP","EndP")
info$Lab <- as.numeric(as.character(factor(info$Variable*100 + info$Motif, levels = unique(info$Variable*100 + info$Motif), labels = 1:length(unique(info$Variable*100 + info$Motif)))))
info.ori <- info
#Generate the weights
pb <- txtProgressBar(min = 0, max = length(unique(info$Lab)))
temp <- foreach::foreach (i = 1:length(unique(info$Lab))) %do% {
setTxtProgressBar(pb = pb, value = i)
mot.con <- info[which(info$Lab==i),]
lab.con <- unique(mot.con$Lab)
n <- dim(mot.con)[1]
variable.con <- unique(mot.con$Variable)
mot.com.all <- info[-which(info$Variable==variable.con),]
temp.ind <- foreach::foreach (j = 1:length(unique(mot.com.all$Lab)), .combine = rbind) %do% {
mot.com <- mot.com.all[which(mot.com.all$Lab==unique(mot.com.all$Lab)[j]),]
lab.com <- unique(mot.com$Lab)
count <- 0
temp.ind.ind <- foreach::foreach (p = 1:dim(mot.con)[1], .combine = c) %do% {
res.temp <- foreach::foreach (x = 1:dim(mot.com)[1], .combine = c) %do% {
out <- ifelse(mot.con[p,"StartP"]>mot.com[x,"EndP"] | mot.con[p,"EndP"]<mot.com[x,"StartP"], yes = 0, no = 1)
return(out)
}
if(sum(res.temp)!=0) {count <- count+1}
return(ifelse(sum(res.temp)!=0, yes = 1, no = 0))
}
w.mat[lab.con ,lab.com] <- round(count/n, 2)
return(c(lab.con, lab.com, temp.ind.ind))
}
return(temp.ind)
}
w.ori <- w.mat
occurence <- plyr::daply(.data = info, .variables = "Lab", .fun = function(x) dim(x)[1])
ord <- order(occurence, decreasing = T)
t = 1
w <- w.mat[ord[t],]
ind.add <- which(w>alpha)
s <- c(ord[t], ind.add)
length(ind.add)
res.multi
res.1 <- Func.motif(ts = data.com$TS1, global.norm = T, local.norm = F, window.size = 10, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
res.1
res.2 <- Func.motif(ts = data.com$TS2, global.norm = T, local.norm = F, window.size = 20, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
res.2
res.multi <- Func.motif.multivariate(motif.list = list(res.1$Indices, res.2$Indices), window.sizes = c(10,20), alpha = .8)
res.multi
test <- data.frame(TS1=data.1, TS2=data.2)
set.seed(2)
data.1 <- rnorm(n = 100, mean = 0, sd = .5)
data.1[1:10] <- seq(from = 1, to = -1, length.out = 10)
data.1[41:50] <- seq(from = -1, to = 1, length.out = 10)
data.1[11:20] <- seq(from = -1, to = 1, length.out = 10)
data.1[81:90] <- seq(from = 1, to = -1, length.out = 10)
ggplot() + geom_line(aes(x = 1:100, y = data.1))
set.seed(123)
data.2 <- rnorm(n = 100, mean = 0, sd = .25)
data.2[1:20] <- seq(from = -1, to = 1, length.out = 20)
data.2[41:60] <- seq(from = -1, to = 1, length.out = 20)
data.2[81:100] <- seq(from = -1, to = 1, length.out = 20)
ggplot() + geom_line(aes(x = 1:100, y = data.2))
test <- data.frame(TS1=data.1, TS2=data.2)
rm("data.1")
rm("data.2")
remove(".Random.seed")
save.image("~/Dropbox/R_Packages/TSMining/TSMining/data/test.RData")
data(test)
res.1 <- Func.motif(ts = test$TS1, global.norm = T, local.norm = F, window.size = 10, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
length(res.1$Indices)
res.1$Indices
res.1$Indices
data.multi
res.multi
res.1 <- Func.motif(ts = test$TS1, global.norm = T, local.norm = F, window.size = 10, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
res.2 <- Func.motif(ts = data.com$TS2, global.norm = T, local.norm = F, window.size = 20, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
res.2 <- Func.motif(ts = test$TS2, global.norm = T, local.norm = F, window.size = 20, overlap = 0,
w = 5, a = 3, mask.size = 3, eps = .01)
res.multi <- Func.motif.multivariate(motif.list = list(res.1$Indices, res.2$Indices),
window.sizes = c(10,20), alpha = .8)
#Use the function to prepare the data frame for visualizing the first multivariate motifs identified
data.multi <- Func.visual.MultiMotif(data = test, multi.motifs = res.multi, index = 1)
#Make the plot using ggplot2
library(ggplot2)
ggplot(data = data.multi) +
geom_line(aes(x = T, y = X)) +
geom_point(aes(x = T, y = X, col=Lab, shape=Lab)) + facet_grid(Facet~.)
data.multi <- Func.visual.MultiMotif(data = test, multi.motifs = res.multi, index = 2)
#Make the plot using ggplot2
library(ggplot2)
ggplot(data = data.multi) +
geom_line(aes(x = T, y = X)) +
geom_point(aes(x = T, y = X, col=Lab, shape=Lab)) + facet_grid(Facet~.)
library(TSMining)
library(TSMining)
library(TSMining)
library(TSMining)
library(TSMining)
library(TSMining)
library(TSMining)
